webpackJsonp([0x6525c9ada09a],{354:function(t,e){t.exports={data:{markdownRemark:{html:'<p>What\'s up, everyone? Happy new year, before I forget! :) Long time no post, eh? I\'ve been on a trip to Brazil for the holidays, but that\'s not the subject today. Let\'s get on to a couple handy git tricks I used quite often these days.</p>\n<h3>Reverting the current branch to a specific commit</h3>\n<p>Committed anything by mistake and want to rollback?</p>\n<div class="gatsby-highlight" data-language="text">\n      <pre class="language-text"><code class="language-text">git reset --hard &lt;commit_sha&gt;</code></pre>\n      </div>\n<h3>Copying files across branches</h3>\n<p>Use this in case you have new files that have been committed, and you also want them to be in another branch without having to merge it with a pull request, for example. On the desired branch do the following:</p>\n<div class="gatsby-highlight" data-language="text">\n      <pre class="language-text"><code class="language-text">git checkout &lt;branch_where_files_are&gt; -- &lt;file_relative_path&gt;</code></pre>\n      </div>\n<p>I will keep updating this post over time.</p>\n<h3>Listing stashes</h3>\n<p>Lists all available stashes.</p>\n<div class="gatsby-highlight" data-language="text">\n      <pre class="language-text"><code class="language-text">git stash list</code></pre>\n      </div>\n<h3>Applying specific stashes</h3>\n<p>Get the stash number from the previous step and replace the n in:</p>\n<div class="gatsby-highlight" data-language="text">\n      <pre class="language-text"><code class="language-text">git stash apply stash@{n}</code></pre>\n      </div>\n<h3>Stashing new files</h3>\n<p>This flag includes the recently uncommitted files to stashing.</p>\n<div class="gatsby-highlight" data-language="text">\n      <pre class="language-text"><code class="language-text">git stash -u</code></pre>\n      </div>\n<h3>Fixing .gitignore</h3>\n<p>This removes all tracked files and adds them back. The -r flag stands for <strong>recursively</strong>.</p>\n<div class="gatsby-highlight" data-language="text">\n      <pre class="language-text"><code class="language-text">git rm -r --cached .\ngit add .\ngit commit -m &quot;Fixed .gitignore&quot;</code></pre>\n      </div>\n<p>If there\'s a specific file or folder you want to fix, this should work as well:</p>\n<div class="gatsby-highlight" data-language="text">\n      <pre class="language-text"><code class="language-text">git rm -r --cached &lt;file-or-folder-name&gt;</code></pre>\n      </div>\n<h3>Rolling back to specific commits</h3>\n<p>First, enter <strong>git log</strong> and get the key of the commit you want to rollback to. Then, run the following command:</p>\n<div class="gatsby-highlight" data-language="text">\n      <pre class="language-text"><code class="language-text">git reset --hard &lt;commit-rsa&gt;</code></pre>\n      </div>\n<h3>Undoing commits</h3>\n<p>Did you just commit something that\'s not 100% correct and would like to keep working on it before the definitive commit? No worries, just undo it using the following command, make the changes and commit it again.</p>\n<div class="gatsby-highlight" data-language="text">\n      <pre class="language-text"><code class="language-text">git reset HEAD~</code></pre>\n      </div>',frontmatter:{date:"November 07, 2017",path:"/first",title:"[GIT] Handy tricks"}}},pathContext:{}}}});
//# sourceMappingURL=path---first-dd6dd219013ddcd3c6a3.js.map